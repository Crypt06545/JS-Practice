// ===============================
// String Basics & Template Literals
// ===============================

const name = "hitesh";
const repoCount = 50;

// Traditional concatenation (old way)
// console.log(name + repoCount + " Value"); // hitesh50 Value

// ‚úÖ Modern & cleaner way ‚Üí Template Literals (ES6 feature)
console.log(`Hello my name is ${name} and my repo count is ${repoCount}`);
// Output: Hello my name is hitesh and my repo count is 50

// ===============================
// String Object & Properties
// ===============================
const gameName = new String("hitesh-hc-com");

// Accessing characters
// console.log(gameName[0]); // 'h'
// console.log(gameName.__proto__); // shows string prototype (object with methods)

// Common string properties and methods
// console.log(gameName.length); // 13
// console.log(gameName.toUpperCase()); // "HITESH-HC-COM"

// charAt() ‚Üí returns character at given index
console.log(gameName.charAt(2)); // 't'

// indexOf() ‚Üí returns index of first occurrence of character
console.log(gameName.indexOf("t")); // 2

// ===============================
// substring() & slice()
// ===============================

// substring(start, end) ‚Üí extracts string from start to (end-1)
const newString = gameName.substring(0, 4);
console.log(newString); // "hite"

// slice(start, end) ‚Üí similar to substring but supports negative indexes
const anotherString = gameName.slice(-8, 4);
console.log(anotherString); // "" ‚Üí no overlap because -8 to 4 range invalid

// ===============================
// trim() ‚Üí removes leading and trailing spaces
// ===============================
const newStringOne = "   hitesh    ";
console.log(newStringOne); // "   hitesh    "
console.log(newStringOne.trim()); // "hitesh"

// ===============================
// replace() & includes()
// ===============================

const url = "https://hitesh.com/hitesh%20choudhary";

// replace(old, new) ‚Üí replaces first match
console.log(url.replace("%20", "-"));
// Output: "https://hitesh.com/hitesh-choudhary"

// includes() ‚Üí returns true/false if substring exists
console.log(url.includes("sundar")); // false

// ===============================
// split() ‚Üí converts string into array
// ===============================
console.log(gameName.split("-"));
// Output: [ 'hitesh', 'hc', 'com' ]

/*
üìò Quick Notes for Revision:
------------------------------
1Ô∏è‚É£ Template Literals ‚Üí `${variable}` syntax, very clean and readable.
2Ô∏è‚É£ String object ‚Üí gives access to many helper methods.
3Ô∏è‚É£ substring() ‚Üí ignores negative index.
4Ô∏è‚É£ slice() ‚Üí supports negative index (good for reverse slicing).
5Ô∏è‚É£ trim() ‚Üí removes spaces at both ends (useful for user inputs).
6Ô∏è‚É£ replace() ‚Üí replaces part of string (use regex for multiple).
7Ô∏è‚É£ includes() ‚Üí boolean check if substring exists.
8Ô∏è‚É£ split() ‚Üí separates string into array by a given delimiter.
*/

// ===============================
// ‚úÖ Bonus Tip:
// ===============================
// Use template literals for dynamic HTML or logging:
// console.log(`User: ${name.toUpperCase()} | Repos: ${repoCount}`);
